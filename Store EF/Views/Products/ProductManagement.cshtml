@using Store_EF.Models
@model PagedList.IPagedList<Product>
@using PagedList.Mvc;
@using PagedList;
@using Store_EF.Models.Extensions;
@{
    ViewBag.Title = "ProductManagement";
    Layout = "~/Views/Shared/_LayoutPageProfile.cshtml";
    if (ViewBag.MaxPage == null)
    {
        ViewBag.MaxPage = 1;
    }

    StoreEntities store = new StoreEntities();
}


<div class="pm__main">
    <div class="pm__title">Quản lý sản phẩm</div>
    <div class="pm__btn-add-warp">
        <div class="pm__btn-add">
            <img class="" src="~/Public/icons/plus.svg" alt="" />
            <a href="@Url.Action("Add", "Products")">Thêm sản phẩm mới</a>
        </div>
    </div>
    <table class="pm__table">
        <thead>
            <tr>
                <th class="pm__table-title" scope="col">Mã sản phẩm</th>
                <th class="pm__table-title" scope="col">Hình ảnh</th>
                <th class="pm__table-title" scope="col">
                    Tên sản phẩm
                </th>
                <th class="pm__table-title" scope="col">Số lượng</th>
                <th class="pm__table-title" scope="col">Chức năng</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                foreach (Product p in Model)
                {
                    <tr>
                        <td class="pm__table-item" scope="row">@p.ProductId</td>
                        <td class="pm__table-item">
                            <img class="pm__table-item-img"
                                 src="~/Public/Imgs/Products/@p.Thumbnail(store)"
                                 alt="" />
                        </td>
                        <td class="pm__table-item">@p.Title</td>
                        <td class="pm__table-item">@p.Stock</td>
                        <td class="pm__table-item">
                            <a href="@Url.Action("Delete", "Products", new { id = p.ProductId})" class="delete-link">Xóa</a> |
                            <a href="@Url.Action("Update", "Products", new { id = p.ProductId})">Sửa</a>
                        </td>
                    </tr>
                }
            }
        </tbody>

        <!-- Modal comfrim -->
        <div id="deleteModal" class="modal">
            <div class="modal-content">
                <span class="model__btn-close">&times;</span>
                <h2>Xác nhận xóa</h2>
                <p>Bạn có chắc chắn muốn xóa sản phẩm này không?</p>
                <div class="modal-actions">
                    <button id="cancelBtn" class="model__btn-cancel">Hủy</button>
                    <a id="confirmDeleteBtn" href="#" class="model__btn-delete">Xóa</a>
                </div>
            </div>
        </div>

    </table>
</div>

<div class="pagination", style="width: 100%">
    @{
        string action = HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString();
        string product = Request.QueryString.Get("product");
    }
    @Html.PagedListPager(
        Model,
        page => Url.Action(action, new { product, page }),
        new PagedListRenderOptions
        {
            LiElementClasses = new[] { "" },
            MaximumPageNumbersToDisplay = ViewBag.MaxPage,
        }
    )
</div>

<script>
    var modal = document.getElementById("deleteModal");
    var confirmDeleteBtn = document.getElementById("confirmDeleteBtn");
    var cancelBtn = document.getElementById("cancelBtn");
    var closeBtn = document.getElementsByClassName("model__btn-close")[0];

    // sự kiện xuất hiện modal, và xóa sản phẩm
    document.querySelectorAll('.delete-link').forEach(function (link) {
        link.addEventListener('click', function (e) {
            e.preventDefault(); 
            var deleteUrl = this.getAttribute('href'); 
            confirmDeleteBtn.setAttribute('href', deleteUrl); 
            modal.style.display = "flex"; 
        });
    });

    // Sự kiện đóng modal khi nhấn x hoặc hủy, hoặc nhấn ra ngoài
    cancelBtn.onclick = function () {
        modal.style.display = "none";
    }
    closeBtn.onclick = function () {
        modal.style.display = "none";
    }
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>
