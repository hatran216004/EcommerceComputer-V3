@using Store_EF.Models
@model PagedList.IPagedList<Product>
@using PagedList.Mvc;
@using PagedList;
@using Store_EF.Models.Extensions;

@{
    ViewBag.title = "Home page";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (ViewBag.MaxPage == null)
    {
        ViewBag.MaxPage = 1;
    }
    StoreEntities store = new StoreEntities();

    string product = Request.QueryString.Get("product");
    string category = Request.QueryString.Get("category");
    string brand = Request.QueryString.Get("brand");
}

<div class="container">
    <main>
        @Html.Partial("_Hero")
        <div class="filter-wrapper">
            <!-- Nút toggle -->
            <div class="toggle-button">
                <button type="button" id="toggle-filter">Bộ lọc</button>
            </div>

            <!-- Filter -->
            <form method="get">
                <div class="filter-container hidden" id="filter-section">
                    <!-- Lọc theo giá -->
                    <div class="filter-group">
                        <label for="min-price">Giá tối thiểu:</label>
                        <input type="number" id="min-price" min="0" name="minPrice" value="@ViewBag.MinPrice" placeholder="Nhập giá thấp nhất">
                    </div>
                    <div class="filter-group">
                        <label for="max-price">Giá tối đa:</label>
                        <input type="number" id="max-price" min="0" name="maxPrice" value="@ViewBag.MaxPrice" placeholder="Nhập giá cao nhất">
                    </div>

                    <!-- Lọc theo brand -->
                    <div class="filter-group">
                        <label>Thương hiệu:</label>
                        <div class="checkbox-group">
                            <label><input type="radio" checked name="brand" value="0"> Tất cả</label>
                            @foreach (Brand b in store.Brands)
                            {
                                if (ViewBag.Brand == b.BrandId)
                                {
                                    <label><input type="radio" checked name="brand" value="@b.BrandId"> @b.Name</label>
                                }
                                else
                                {
                                    <label><input type="radio" name="brand" value="@b.BrandId"> @b.Name</label>
                                }
                            }
                        </div>
                    </div>

                    <!-- Submit -->
                    <div class="filter-button">
                        <button type="submit">Áp dụng</button>
                    </div>
                </div>
            </form>
        </div>
        <section class="product">
            <div class="product__list">
                @if (Model != null)
                {
                    foreach (Product p in Model)
                    {
                        var result = p.DiscountPercentage();
                        <a class="product__item" href="@Url.Action("Detail", "Products", new { Id = p.ProductId })">
                            <div class="product__img">
                                <img src="~/Public/imgs/Products/@p.Thumbnail()" alt="" />
                                @if (result != 0)
                                {
                                    <div class="product__sale">-@result%</div>
                                }
                            </div>
                            <div class="product__info">
                                <h3 class="product__name">@p.Title</h3>
                                <div class="products__price" style="font-weight:bold">@p.FormattedPrice() @if (result != 0)
                                                                {<span style="color:dimgray;font-size:small;text-decoration:line-through"> @Helpers.FormattedPrice(p.Price)</span>}</div>
                            </div>
                        </a>
                    }
                }
            </div>
        </section>
        <div class="pagination">
            @{
                string action = HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString();
            }
            @Html.PagedListPager(
                Model,
                page => Url.Action(action, new { category, product, page }),
                new PagedListRenderOptions
                {
                    LiElementClasses = new[] { "" },
                    MaximumPageNumbersToDisplay = ViewBag.MaxPage,
                }
            )
        </div>
        <script>

                const toggleButton = document.getElementById('toggle-filter');
                const filterSection = document.getElementById('filter-section');

                toggleButton.addEventListener('click', () => {
                    filterSection.classList.toggle('hidden');
                    toggleButton.textContent = filterSection.classList.contains('hidden')
                        ? 'Bộ Lọc'
                        : 'Ẩn bộ lọc';
                });
        </script>
    </main>
</div>

