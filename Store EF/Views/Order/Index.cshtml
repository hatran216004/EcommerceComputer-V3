@using Store_EF.Models
@using Store_EF.Models.Extensions
@model IEnumerable<Order>
@{
    ViewBag.Title = "OrderHistory";
    Layout = "~/Views/Shared/_Layout.cshtml";
    StoreEntities store = new StoreEntities();
}
<style>
    .orderhis_nav__content {
        display: none;
    }

    .orderhis_nav__content--active {
        display: block;
    }
</style>

<div class="orderhis">
    <nav class="orderhis_nav">
        <ul class="orderhis_nav__list">
            <li class="orderhis_nav__item orderhis_nav__item--active">
                <a href="#">Tất cả</a>
            </li>
            <li class="orderhis_nav__item">
                <a href="#">Chờ thanh toán</a>
            </li>
            <li class="orderhis_nav__item">
                <a href="#">Hoàn thành</a>
            </li>
            <li class="orderhis_nav__item">
                <a href="#">Đã hủy</a>
            </li>
        </ul>
        @*<div class="orderhis_nav__search">
            <button class="orderhis_nav__search-btn">
                <img src="~/Public/Imgs/search-icon.svg" alt="" />
            </button>
            <input type="text"
                    placeholder="Tìm kiếm đơn hàng..."
                    class="orderhis_nav__search-input" />
        </div>*@
    </nav>
    <div class="orderhis_list-order">
        <!-- Danh sách đơn hàng -->
        <div class="orderhis_list-order__list">
            <!-- Đơn hàng -->
            <div class="orderhis_nav__content orderhis_nav__content--active">
                @foreach (Order order in Model)
                {
                    Payment payment = order.Payments.First(x => x.OrderId == order.OrderId);
                    <div class="orderhis_list-order__list-mini">
                        <div class="orderhis__list-mini__item-header">
                            <span>Mã đơn hàng: @order.OrderId</span>
                            @if (payment.Status == "Succeeded")
                            {
                                <span class="orderhis__list-mini__item-header__status orderhis__list-mini__item-header__status--success"><a href="@Url.Action("Invoice", "Order", new { id = order.OrderId })" target="_blank">@order.Status</a></span>

                            }
                            else if ((payment.Status == "Waitting"))
                            {
                                <span class="orderhis__list-mini__item-header__status orderhis__list-mini__item-header__status--cancel"><a href="@Url.Action("Payment", "CheckOut")">@order.Status</a></span>
                            }
                            else
                            {
                                <span class="orderhis__list-mini__item-header__status orderhis__list-mini__item-header__status--cancel">@order.Status</span>
                            }
                        </div>
                        @foreach (OrderDetail detail in order.OrderDetails)
                        {
                            <div class="orderhis__list-mini__item">
                                <!-- Các sản phẩm trong đơn hàng -->
                                <div class="orderhis__list-mini__item-product">
                                    <img class="orderhis__list-mini__item-product__thumnail"
                                         src="~/Public/imgs/Products/@detail.Product.Thumbnail(store)"
                                         alt="" />
                                    <div class="orderhis__list-mini__item-product__info">
                                        <div class="orderhis__list-mini__item-product__info-warp">
                                            <span class="orderhis__list-mini__item-product__info-name">
                                                @detail.Product.Title
                                            </span>
                                            <span class="orderhis__list-mini__item-product__info-quantity">x @detail.Quantity</span>
                                        </div>
                                        @if (detail.Product.PromoPrice == null)
                                        {
                                            <span class="orderhis__list-mini__item-product__info-price">
                                                @detail.Product.FormattedPrice(false)
                                            </span>
                                        }
                                        else
                                        {<span class="orderhis__list-mini__item-product__info-price">

                                                <span class="orderhis__list-price--origin">@detail.Product.FormattedPrice(true)</span>@detail.Product.FormattedPrice(false)
                                            </span>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                            <div class="orderhis_list-order__list-mini__price">
                                <div class="orderhis_list-order__list-mini__price-action">
                                    <a class="orderhis_list-order__list-mini__price-detailBTN" href="@Url.Action("Detail", "Order", new { id = order.OrderId })">Xem chi tiết</a>
                                    @if (payment.Status == "Waitting")
                                    {
                                        <a class="orderhis_list-order__list-mini__price-cancel" href="#">Huỷ</a>
                                    }
                                </div>
                                <div class="orderhis_list-order__list-mini__price-info">
                                    Thành tiền: <span>@Helpers.FormattedPrice(order.TotalPrice())</span>
                                </div>
                            </div>
                    </div>
                }
            </div>

            <div class="orderhis_nav__content">
                @foreach (Order order in Model)
                {
                    Payment payment = order.Payments.First(x => x.OrderId == order.OrderId);
                    if (payment.Status == "Waitting")
                    {
                        <div class="orderhis_list-order__list-mini">
                            <div class="orderhis__list-mini__item-header">
                                <span>Mã đơn hàng: @order.OrderId</span>
                                <span class="orderhis__list-mini__item-header__status orderhis__list-mini__item-header__status--cancel">@order.Status</span>
                            </div>
                            @foreach (OrderDetail detail in order.OrderDetails)
                            {
                                <div class="orderhis__list-mini__item">
                                    <!-- Các sản phẩm trong đơn hàng -->
                                    <div class="orderhis__list-mini__item-product">
                                        <img class="orderhis__list-mini__item-product__thumnail"
                                             src="~/Public/imgs/Products/@detail.Product.Thumbnail(store)"
                                             alt="" />
                                        <div class="orderhis__list-mini__item-product__info">
                                            <div class="orderhis__list-mini__item-product__info-warp">
                                                <span class="orderhis__list-mini__item-product__info-name">
                                                    @detail.Product.Title
                                                </span>
                                                <span class="orderhis__list-mini__item-product__info-quantity">x @detail.Quantity</span>
                                            </div>
                                            @if (detail.Product.PromoPrice == null)
                                            {
                                                <span class="orderhis__list-mini__item-product__info-price">
                                                    @detail.Product.FormattedPrice(false)
                                                </span>
                                            }
                                            else
                                            {<span class="orderhis__list-mini__item-product__info-price">

                                                    <span class="orderhis__list-price--origin">@detail.Product.FormattedPrice(true)</span>@detail.Product.FormattedPrice(false)
                                                </span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="orderhis_list-order__list-mini__price">
                                <div class="orderhis_list-order__list-mini__price-action">
                                    <a class="orderhis_list-order__list-mini__price-detailBTN" href="@Url.Action("Detail", "Order", new { id = order.OrderId })">Xem chi tiết</a>
                                    <a class="orderhis_list-order__list-mini__price-cancel" href="#">Huỷ</a>
                                </div>
                                <div class="orderhis_list-order__list-mini__price-info">
                                    Thành tiền: <span>@Helpers.FormattedPrice(order.TotalPrice())</span>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="orderhis_nav__content">
                @foreach (Order order in Model)
                {
                    Payment payment = order.Payments.First(x => x.OrderId == order.OrderId);
                    if (payment.Status == "Succeeded") 
                    { 
                        <div class="orderhis_list-order__list-mini">
                            <div class="orderhis__list-mini__item-header">
                                <span>Mã đơn hàng: @order.OrderId</span>
                                <span class="orderhis__list-mini__item-header__status orderhis__list-mini__item-header__status--success"><a href="@Url.Action("Invoice", "Order", new { id = order.OrderId })" target="_blank">@order.Status</a></span>
                            </div>
                            @foreach (OrderDetail detail in order.OrderDetails)
                            {
                                <div class="orderhis__list-mini__item">
                                    <!-- Các sản phẩm trong đơn hàng -->
                                    <div class="orderhis__list-mini__item-product">
                                        <img class="orderhis__list-mini__item-product__thumnail"
                                             src="~/Public/imgs/Products/@detail.Product.Thumbnail(store)"
                                             alt="" />
                                        <div class="orderhis__list-mini__item-product__info">
                                            <div class="orderhis__list-mini__item-product__info-warp">
                                                <span class="orderhis__list-mini__item-product__info-name">
                                                    @detail.Product.Title
                                                </span>
                                                <span class="orderhis__list-mini__item-product__info-quantity">x @detail.Quantity</span>
                                            </div>
                                            @if (detail.Product.PromoPrice == null)
                                            {
                                                <span class="orderhis__list-mini__item-product__info-price">
                                                    @detail.Product.FormattedPrice(false)
                                                </span>
                                            }
                                            else
                                            {<span class="orderhis__list-mini__item-product__info-price">

                                                    <span class="orderhis__list-price--origin">@detail.Product.FormattedPrice(true)</span>@detail.Product.FormattedPrice(false)
                                                </span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="orderhis_list-order__list-mini__price">
                                <div class="orderhis_list-order__list-mini__price-action">
                                    <a class="orderhis_list-order__list-mini__price-detailBTN" href="@Url.Action("Detail", "Order", new { id = order.OrderId })">Xem chi tiết</a>
                                </div>
                                <div class="orderhis_list-order__list-mini__price-info">
                                    Thành tiền: <span>@Helpers.FormattedPrice(order.TotalPrice())</span>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>

            <div class="orderhis_nav__content">
                @foreach (Order order in Model)
                {
                    Payment payment = order.Payments.First(x => x.OrderId == order.OrderId);
                    if (payment.Status == "Failed")
                    {
                        <div class="orderhis_list-order__list-mini">
                            <div class="orderhis__list-mini__item-header">
                                <span>Mã đơn hàng: @order.OrderId</span>
                                <span class="orderhis__list-mini__item-header__status orderhis__list-mini__item-header__status--cancel">@order.Status</span>
                            </div>
                            @foreach (OrderDetail detail in order.OrderDetails)
                            {
                                <div class="orderhis__list-mini__item">
                                    <!-- Các sản phẩm trong đơn hàng -->
                                    <div class="orderhis__list-mini__item-product">
                                        <img class="orderhis__list-mini__item-product__thumnail"
                                             src="~/Public/imgs/Products/@detail.Product.Thumbnail(store)"
                                             alt="" />
                                        <div class="orderhis__list-mini__item-product__info">
                                            <div class="orderhis__list-mini__item-product__info-warp">
                                                <span class="orderhis__list-mini__item-product__info-name">
                                                    @detail.Product.Title
                                                </span>
                                                <span class="orderhis__list-mini__item-product__info-quantity">x @detail.Quantity</span>
                                            </div>
                                            @if (detail.Product.PromoPrice == null)
                                            {
                                                <span class="orderhis__list-mini__item-product__info-price">
                                                    @detail.Product.FormattedPrice(false)
                                                </span>
                                            }
                                            else
                                            {<span class="orderhis__list-mini__item-product__info-price">

                                                    <span class="orderhis__list-price--origin">@detail.Product.FormattedPrice(true)</span>@detail.Product.FormattedPrice(false)
                                                </span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="orderhis_list-order__list-mini__price">
                                <div class="orderhis_list-order__list-mini__price-action">
                                    <a class="orderhis_list-order__list-mini__price-detailBTN" href="@Url.Action("Detail", "Order", new { id = order.OrderId })">Xem chi tiết</a>
                                </div>
                                <div class="orderhis_list-order__list-mini__price-info">
                                    Thành tiền: <span>@Helpers.FormattedPrice(order.TotalPrice())</span>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

<script>
            const navitemElements = document.querySelectorAll(
                '.orderhis_nav__item'
            );
            const orderHistoryContents = document.querySelectorAll('.orderhis_nav__content')

            navitemElements.forEach((navitem, index) => {
                navitem.addEventListener('click', () => {
                    // Item
                    const itemActive = document.querySelector('.orderhis_nav__item--active')
                    itemActive.classList.remove('orderhis_nav__item--active');
                    navitem.classList.add('orderhis_nav__item--active');

                    // Content
                    const contentActive = document.querySelector('.orderhis_nav__content--active')
                    contentActive.classList.remove('orderhis_nav__content--active')
                    orderHistoryContents[index].classList.add('orderhis_nav__content--active')
                });
            });
</script>

