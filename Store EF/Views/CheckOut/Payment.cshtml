@using Store_EF.Models;
@using Store_EF.Models.Extensions;
@using System.Configuration;
@model Payment
@{
    ViewBag.Title = "Payment";
    string bank = ConfigurationManager.AppSettings["Bank"];
    string account = ConfigurationManager.AppSettings["Account"];
    string fullName = ConfigurationManager.AppSettings["FullName"];
}
@if (Model.Method == "Bank")
{
    <img style="display:block; width:500px;height:500px;" src="data:image/png;base64,@Model.QR()" />
    <p>Chủ tài khoản: @fullName</p>
    <p>Số tài khoản: @account</p>
    <p>Ngân hàng: @bank</p>
    <p>Số tiền: @Helpers.FormattedPrice(Model.Order_.TotalPrice())</p>
    <p>Nội dung: @Model.Code</p>
    <p>Mã thanh toán này sẽ hết hạn sau @Model.Expiry.Value.ToString("hh:mm") ngày @Model.Expiry.Value.ToString("dd-MM-yyyy")</p>
    <p>Trạng thái: <span id="status">Chờ thanh toán</span></p>
    using (Html.BeginForm("Cancel", "CheckOut", FormMethod.Post, new { id = "cancelPayment" })) {
        <input type="hidden" value="@Model.PaymentId" name="paymentId" />
        <button type="submit">Huỷ thanh toán</button>
    }
    <script>
        function startSSE() {
            var source = new EventSource('@Url.Action("Status", "CheckOut", new { code = Model.Code })');
            source.onmessage = function (event) {
                const statusEle = document.getElementById("status");
                const cancelPayment = document.getElementById("cancelPayment");
                if (event.data == 'Succeeded') {
                    cancelPayment.style.visibility = "hidden"
                    statusEle.innerText = "Thanh toán thành công";
                    source.close();
                } else if (event.data == 'Failed') {
                    cancelPayment.style.visibility = "hidden"
                    statusEle.innerText = "Thanh toán thất bại";
                    source.close();
                }
            };
            source.onerror = function (event) {
                console.log("Error occurred: ", event);
            };
            window.addEventListener('beforeunload', function () {
                console.log('Closing SSE connection...');
                source.close();
            });
        }
        setTimeout(startSSE, 2000);
    </script>
}

